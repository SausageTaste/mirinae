#version 450

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (binding = 0, rgba8) uniform writeonly image2D out_image;

layout(set = 0, binding = 1) uniform sampler2D u_noise0;
layout(set = 0, binding = 2) uniform sampler2D u_noise1;
layout(set = 0, binding = 3) uniform sampler2D u_noise2;
layout(set = 0, binding = 4) uniform sampler2D u_noise3;


layout (push_constant) uniform U_OceanTestPushConst {
    float time;
} u_pc;


float rand(vec2 co){
  return fract(sin(dot(co.xy, vec2(12.9898,78.233))) * 43758.5453);
}


void main() {
    const ivec2 global_idx = ivec2(gl_GlobalInvocationID.xy);

    float height = 0;
    float amp = 1;
    float wavelen = 1;
    const vec2 uv = vec2(global_idx) / 16.0;
    for (int i = 0; i < 512; ++i) {
        const float rand_val = texture(u_noise0, global_idx).r;
        const vec2 direc = vec2(cos(rand_val), sin(rand_val));
        height += sin(u_pc.time + dot(uv, direc) * wavelen) * amp;
        amp *= 0.92;
        wavelen *= 1.12;
    }

    const vec4 pixel = vec4(vec3(height * 0.1), 1);
    imageStore(out_image, global_idx, pixel);
}
