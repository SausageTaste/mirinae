#version 450

#include "../utils/complex.glsl"
#include "../utils/konst.glsl"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (binding = 0, rgba32f) uniform image2D ppong_images[9];
layout (binding = 1, rgba32f) uniform image2D hkt_images[9];

layout(set = 0, binding = 2) uniform sampler2D u_butterfly_cache;

layout (push_constant) uniform U_OceanButterflyPushConst {
    int stage;
    int pingpong;
    int direction;
} u_pc;


vec2 calc_h(vec2 p_sample, vec2 q_sample, Complex w) {
    Complex p = complex_init(p_sample);
    Complex q = complex_init(q_sample);
    Complex h = complex_add(p, complex_mul(w, q));
    return vec2(h.re, h.im);
}


void horizontalButterflies() {
    const int idx = int(gl_GlobalInvocationID.z);
    const ivec2 texel = ivec2(gl_GlobalInvocationID.xy);
    const vec4 data = texelFetch(u_butterfly_cache, ivec2(u_pc.stage, texel.x), 0);
    const ivec2 p_coord = ivec2(data.z, texel.y);
    const ivec2 q_coord = ivec2(data.w, texel.y);
    const Complex w = complex_init(data.xy);

    if (u_pc.pingpong == 0) {
        const vec4 p_texel = imageLoad(ppong_images[idx], p_coord);
        const vec4 q_texel = imageLoad(ppong_images[idx], q_coord);
        imageStore(hkt_images[idx], texel, vec4(
            calc_h(p_texel.xy, q_texel.xy, w),
            calc_h(p_texel.zw, q_texel.zw, w)
        ));
    } else if (u_pc.pingpong == 1) {
        const vec4 p_texel = imageLoad(hkt_images[idx], p_coord);
        const vec4 q_texel = imageLoad(hkt_images[idx], q_coord);
        imageStore(ppong_images[idx], texel, vec4(
            calc_h(p_texel.xy, q_texel.xy, w),
            calc_h(p_texel.zw, q_texel.zw, w)
        ));
    }
}

void verticalButterflies() {
    const int idx = int(gl_GlobalInvocationID.z);
    const ivec2 texel = ivec2(gl_GlobalInvocationID.xy);
    const vec4 data = texelFetch(u_butterfly_cache, ivec2(u_pc.stage, texel.y), 0);
    const ivec2 p_coord = ivec2(texel.x, data.z);
    const ivec2 q_coord = ivec2(texel.x, data.w);
    const Complex w = complex_init(data.xy);

    if (u_pc.pingpong == 0) {
        const vec4 p_texel = imageLoad(ppong_images[idx], p_coord);
        const vec4 q_texel = imageLoad(ppong_images[idx], q_coord);
        imageStore(hkt_images[idx], texel, vec4(
            calc_h(p_texel.xy, q_texel.xy, w),
            calc_h(p_texel.zw, q_texel.zw, w)
        ));
    } else if (u_pc.pingpong == 1) {
        const vec4 p_texel = imageLoad(hkt_images[idx], p_coord);
        const vec4 q_texel = imageLoad(hkt_images[idx], q_coord);
        imageStore(ppong_images[idx], texel, vec4(
            calc_h(p_texel.xy, q_texel.xy, w),
            calc_h(p_texel.zw, q_texel.zw, w)
        ));
    }
}

void main() {
    if (u_pc.direction == 0) {
        horizontalButterflies();
    } else if (u_pc.direction == 1) {
        verticalButterflies();
    }
}
