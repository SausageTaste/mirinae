#version 450

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (binding = 0, rgba32f) uniform writeonly image2D out_displacement;
layout (binding = 1, rgba8) uniform writeonly image2D out_normal;
layout (binding = 2, rgba32f) uniform readonly image2D in_hkt_dxdy;
layout (binding = 3, rgba32f) uniform readonly image2D in_hkt_dz;
layout (binding = 4, rgba32f) uniform readonly image2D in_hkt_ddxddz;

layout (push_constant) uniform U_OceanFinalizePushConst {
    int N;
} u_pc;


void main() {
    ivec2 global_idx = ivec2(gl_GlobalInvocationID.xy);

    float perms[2] = float[2](1.0, -1.0);
    int index = int(mod((int(global_idx.x) + int(global_idx.y)), 2));
    float perm = perms[index];
    const float norm_factor = perm / float(u_pc.N * u_pc.N);

    vec4 texel_dxdy = imageLoad(in_hkt_dxdy, global_idx);
    vec4 texel_dz = imageLoad(in_hkt_dz, global_idx);
    vec3 displacement = vec3(texel_dxdy.xz, texel_dz.x) * norm_factor;

    vec4 texel_ddxddz = imageLoad(in_hkt_ddxddz, global_idx);
    vec3 normal = vec3(texel_ddxddz.x * norm_factor, texel_ddxddz.z * norm_factor, 1);
    normal.y *= -1;
    normal = normalize(normal);
    normal = normal * 0.5 + 0.5;

    imageStore(out_displacement, global_idx, vec4(displacement.x, -displacement.y, displacement.z, 1));
    imageStore(out_normal, global_idx, vec4(normal, 1));
}
